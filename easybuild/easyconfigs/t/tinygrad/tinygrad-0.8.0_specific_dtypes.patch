Char and long are ambiguous length, this fixes a build error.
https://github.com/easybuilders/easybuild-easyconfigs/pull/20339#issuecomment-2049850247

Author: Viktor Rehnberg

--- tinygrad/dtype.py.old	2024-05-02 10:03:58.581517446 +0000
+++ tinygrad/dtype.py	2024-04-29 12:53:54.744523622 +0000
@@ -49,14 +49,14 @@
   @staticmethod
   def fields() -> Dict[str, DType]: return DTYPES_DICT
   bool: Final[DType] = DType(0, 1, "bool", np.bool_)
-  int8: Final[DType] = DType(1, 1, "char", np.int8)
-  uint8: Final[DType] = DType(2, 1, "unsigned char", np.uint8)
+  int8: Final[DType] = DType(1, 1, "int8_t", np.int8)
+  uint8: Final[DType] = DType(2, 1, "uint8_t", np.uint8)
   int16: Final[DType] = DType(3, 2, "short", np.int16)
   uint16: Final[DType] = DType(4, 2, "unsigned short", np.uint16)
   int32: Final[DType] = DType(5, 4, "int", np.int32)
   uint32: Final[DType] = DType(6, 4, "unsigned int", np.uint32)
-  int64: Final[DType] = DType(7, 8, "long", np.int64)
-  uint64: Final[DType] = DType(8, 8, "unsigned long", np.uint64)
+  int64: Final[DType] = DType(7, 8, "long long", np.int64)
+  uint64: Final[DType] = DType(8, 8, "unsigned long long", np.uint64)
   float16: Final[DType] = DType(9, 2, "half", np.float16)
   # bfloat16 has higher priority than float16, so least_upper_dtype(dtypes.int64, dtypes.uint64) = dtypes.float16
   bfloat16: Final[DType] = DType(10, 2, "__bf16", None)

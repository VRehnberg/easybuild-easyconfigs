easyblock = 'CMakeMake'

name = 'CUTLASS'
version = '3.5.1'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/NVIDIA/cutlass'
description = """CUTLASS is a collection of CUDA C++ template
abstractions for implementing high-performance matrix-matrix
multiplication (GEMM) and related computations at all levels and scales
within CUDA. It incorporates strategies for hierarchical decomposition
and data movement similar to those used to implement cuBLAS and cuDNN.
CUTLASS decomposes these "moving parts" into reusable, modular software
components abstracted by C++ template classes. Primitives for different
levels of a conceptual parallelization hierarchy can be specialized and
tuned via custom tiling sizes, data types, and other algorithmic policy.
The resulting flexibility simplifies their use as building blocks within
custom kernels and applications."""

toolchain = {'name': 'foss', 'version': '2023a'}

github_account = 'NVIDIA'
source_urls = [GITHUB_LOWER_SOURCE]
patches = ['CUTLASS-3.5.1_install_tools.patch']

sources = ['v%(version)s.tar.gz']
checksums = [
    {'v%(version)s.tar.gz': '20b7247cda2d257cbf8ba59ba3ca40a9211c4da61a9c9913e32b33a2c5883a36'},
    {'CUTLASS-3.5.1_install_tools.patch': '18fa5361b15848d98435b8b08bd921130718b963ca4ad47fa0db96fbe815e509'},
]

builddependencies = [
    ('CMake', '3.26.3'),
    ('Python', '3.11.3'),
]

dependencies = [
    ('CUDA', '12.1.1', '', SYSTEM),
    ('cuDNN', '8.9.2.26', versionsuffix, SYSTEM),
]

_copts = [
    '-DCUTLASS_NVCC_ARCHS="%(cuda_cc_cmake)s"',
    '-DCUTLASS_ENABLE_CUBLAS=1',
    '-DCUTLASS_ENABLE_CUDNN=1',
    '-DCUTLASS_ENABLE_TOOLS=1',
]
configopts = ' '.join(_copts)

sanity_check_paths = {
    'files': ['include/cutlass/cutlass.h', 'lib/libcutlass.%s' % SHLIB_EXT],
    'dirs': ['lib/cmake', 'tools/util/include'],
}

moduleclass = 'lib'
